---
actionlint:
  short_name: Actionlint
  long_name: Github Actions Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/actionlint@master
  config:
  path: ".github/workflows"
  pattern: ".*\\.(yml|yaml)$"
bandit:
  short_name: Bandit
  long_name: Python Bandit Linter
  uses: cloud-officer/ci-actions/linters/bandit@master
  config: ".bandit"
  path: "."
  pattern: ".*\\.(py)$"
codeql-c-cpp:
  short_name: CodeQL C-Cpp
  long_name: CodeQL C-Cpp Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(cpp|c++|cxx|hpp|hh|h++|hxx|c|cc|h)$"
  options:
    languages: "c-cpp"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-csharp:
  short_name: CodeQL CSharp
  long_name: CodeQL CSharp Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(sln|csproj|cs|cshtml|xaml)$"
  options:
    languages: "csharp"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-go:
  short_name: CodeQL Go
  long_name: CodeQL Go Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(go)$"
  options:
    languages: "go"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-java-kotlin:
  short_name: CodeQL Java-Kotlin
  long_name: CodeQL Java-Kotlin Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(java|kt)$"
  options:
    languages: "java-kotlin"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-javascript-typescript:
  short_name: CodeQL Javascript-Typescript
  long_name: CodeQL Javascript-Typescript Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(js|jsx|mjs|es|es6|htm|html|xhtm|xhtml|vue|hbs|ejs|njk|json|yaml|yml|raml|xml|ts|tsx|mts|cts)$"
  options:
    languages: "javascript-typescript"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-python:
  short_name: CodeQL Python
  long_name: CodeQL Python Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(py)$"
  options:
    languages: "python"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-ruby:
  short_name: CodeQL Ruby
  long_name: CodeQL Ruby Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(rb|erb|gemspec)$"
  options:
    languages: "ruby"
  permissions:
    actions: read
    contents: read
    security-events: write
codeql-swift:
  short_name: CodeQL Swift
  long_name: CodeQL Swift Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/codeql@master
  config:
  path: "."
  pattern: ".*\\.(swift)$"
  options:
    languages: "swift"
  permissions:
    actions: read
    contents: read
    security-events: write
eslint:
  short_name: ESLint
  long_name: JavaScript ES Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/eslint@master
  config: ".eslintrc.json"
  path: "."
  pattern: ".*\\.(js)$"
flake8:
  short_name: Flake8
  long_name: Python Flake8 Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/flake8@master
  config: ".flake8"
  path: "."
  pattern: ".*\\.(py)$"
golangci:
  short_name: Golangci-lint
  long_name: Go Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/golangci@master
  config: ".golangci.yml"
  path: "."
  pattern: ".*\\.(go)$"
hadolint:
  short_name: Hadolint
  long_name: Docker Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/hadolint@master
  config: ".hadolint.yaml"
  path: "."
  pattern: ".*Dockerfile$"
ktlint:
  short_name: KTLint
  long_name: Kotlin Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/ktlint@master
  config: ".editorconfig"
  path: "."
  pattern: ".*\\.(kt|kts)$"
markdownlint:
  short_name: Markdownlint
  long_name: Markdown Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/markdownlint@master
  config: ".markdownlint.yml"
  path: "."
  pattern: ".*\\.(md)$"
phpcs:
  short_name: PHPCS
  long_name: PHP CS Linter
  uses: cloud-officer/ci-actions/linters/phpcs@master
  config:
  path: "."
  pattern: ".*\\.(php)$"
phpstan:
  short_name: PHPStan
  long_name: PHP Stan Linter
  uses: cloud-officer/ci-actions/linters/phpstan@master
  config:
  path: "."
  pattern: ".*\\.(php)$"
pmd:
  short_name: PMD
  long_name: Java Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/pmd@master
  config: ".pmd.xml"
  path: "."
  pattern: ".*\\.(java|js)$"
protolint:
  short_name: Protolint
  long_name: Protocol Buffer Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/protolint@master
  config: ".protolint.yaml"
  path: "."
  pattern: ".*\\.(proto)$"
rubocop:
  short_name: Rubocop
  long_name: Ruby Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/rubocop@master
  config: ".rubocop.yml"
  path: "."
  pattern: "(.*\/Fastfile$)|(.*\\.(rb)$)"
  directory: fastlane
shellcheck:
  short_name: ShellCheck
  long_name: Shell Scripts Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/shellcheck@master
  config: ".shellcheckrc"
  path: "."
  pattern: ".*\\.(sh)$"
swiftlint:
  short_name: Swiftlint
  long_name: Swift Linter
  uses: cloud-officer/ci-actions/linters/swiftlint@master
  config: ".swiftlint.yml"
  path: "."
  pattern: ".*\\.(swift)$"
yamllint:
  short_name: Yamllint
  long_name: YAML Linter
  condition: "(github.event_name == 'pull_request' || github.event_name == 'pull_request_target')"
  uses: cloud-officer/ci-actions/linters/yamllint@master
  config: ".yamllint.yml"
  path: "."
  pattern: ".*\\.(yml|yaml)$"
